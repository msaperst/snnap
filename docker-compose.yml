version: '3'
services:
  mysql:
    build:
      context: sql
      dockerfile: Dockerfile
    #    command: "bash -c './setup-database.sh'"
    container_name: snnap_mysql
    restart: always
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - ${MYSQL_PORT}:3306
    expose:
      - ${MYSQL_PORT}
    environment:
      TZ: "America/New_York"
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  api:
    build:
      context: api
      dockerfile: Dockerfile
    container_name: snnap_api
    restart: always
    depends_on:
      - mysql
    links:
      - mysql
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      API_PORT: ${API_PORT}
      API_LIMIT: ${API_LIMIT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
    volumes:
      - ./api/certs:/usr/src/app/certs
      - /etc/letsencrypt/live/snnap.app:/etc/letsencrypt/live/snnap.app
      - /etc/letsencrypt/archive/snnap.app:/etc/letsencrypt/archive/snnap.app

  ui:
    build:
      context: ui
      dockerfile: Dockerfile
      args:
        REACT_APP_DOMAIN: ${DOMAIN}
        REACT_APP_WS_PROTOCOL: ${WS_PROTOCOL}
        REACT_APP_WS_PORT: ${WS_PORT}
        REACT_APP_GEOAPIFY_API_KEY: ${GEOAPIFY_API_KEY}
    container_name: snnap_ui
    restart: always
    depends_on:
      - api
    ports:
      - ${HTTP_PORT}:80
    links:
      - api

volumes:
  mysql: