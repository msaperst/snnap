# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Main CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2

      - name: Setup env file ‚öô
        run: |
          echo "# tool hosting information" > .env
          echo "HTTP_PORT=70" >> .env
          echo "HTTPS_PORT=7443" >> .env
          echo "" >> .env
          echo "# database information" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_ROOT_PASSWORD }}" >> .env
          echo "MYSQL_PORT=3306" >> .env
          echo "MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }}" >> .env
          echo "MYSQL_USER=${{ secrets.MYSQL_USER }}" >> .env
          echo "MYSQL_PASSWORD=${{ secrets.MYSQL_PASSWORD }}" >> .env
          echo "" >> .env
          echo "# api information" >> .env
          echo "API_PORT=3001" >> .env

      - name: Build Dockerfile üêã
        run: docker-compose -f docker-compose.yml build

      - name: Copy to Production
        run: |
          docker save snnap_ui | gzip | ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'gunzip | docker load'
          docker save snnap_api | gzip | ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'gunzip | docker load'
          docker save snnap_mysql | gzip | ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'gunzip | docker load'
          scp docker-compose.yml ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }}:${{ secrets.PRODUCTION_PATH }}

      - name: Launch Snnap
        run: |
          ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'cd ${{ secrets.PRODUCTION_PATH }}; docker-compose -f docker-compose.yml stop'"
          ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'cd ${{ secrets.PRODUCTION_PATH }}; docker-compose -f docker-compose.yml up -d'"
          ssh ${{ secrets.PRODUCTION_USERNAME }}:${{ secrets.PRODUCTION_PASSWORD }}@${{ secrets.PRODUCTION }} 'docker system prune -a -f'