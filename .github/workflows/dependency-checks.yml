name: Software Composition Analysis

on: [ pull_request ]

jobs:
  api:
    name: API SCA
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

#      - name: Setup Node ☕
#        uses: actions/setup-node@v1
#        with:
#          node-version: 14.x
#
#      - name: Install 🔧
#        run: cd api; npm ci

      - name: Dependency Check 🐛
        run: |
          cd api
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.3.0/dependency-check-7.3.0-release.zip
          unzip dependency-check-7.3.0-release.zip
          dependency-check/bin/dependency-check.sh --out=./dependency-check-reports --scan package-lock.json -f HTML -f JSON --failOnCVSS 8 --project="snnap api" --data=/tmp/dependency-check-data

      - name: Publish Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: OWASP Dependency Check API Results
          path: api/dependency-check-reports

  ui:
    name: UI SCA
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

#      - name: Setup Node ☕
#        uses: actions/setup-node@v1
#        with:
#          node-version: 14.x
#
#      - name: Install 🔧
#        run: cd ui; npm ci

      - name: Dependency Check 🐛
        run: |
          cd ui
          wget https://github.com/jeremylong/DependencyCheck/releases/download/v7.3.0/dependency-check-7.3.0-release.zip
          unzip dependency-check-7.3.0-release.zip
          dependency-check/bin/dependency-check.sh --out=./dependency-check-reports --scan package-lock.json -f HTML -f JSON --failOnCVSS 8 --project="snnap ui" --data=/tmp/dependency-check-data

      - name: Publish Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: OWASP Dependency Check UI Results
          path: ui/dependency-check-reports